{"ast":null,"code":"import { list } from '@keystone-next/keystone/schema';\nimport { text, password, relationship } from '@keystone-next/fields';\nimport { permissions, rules } from '../access';\nexport const User = list({\n  access: {\n    create: () => true,\n    read: rules.canManageUsers,\n    update: rules.canManageUsers,\n    // only people with the permission can delete themselves\n    // youi cant delete yourself\n    delete: permissions.canManageUsers\n  },\n  ui: {\n    // hide the backend ui from regular users\n    hideCreate: args => !permissions.canManageUsers(args),\n    hideDelete: args => !permissions.canManageUsers(args)\n  },\n  fields: {\n    name: text({\n      isRequired: true\n    }),\n    email: text({\n      isRequired: true,\n      isUnique: true\n    }),\n    password: password(),\n    cart: relationship({\n      ref: 'CartItem.user',\n      many: true,\n      // user can have multiple relationships to cart items\n      ui: {\n        createView: {\n          fieldMode: 'hidden'\n        },\n        itemView: {\n          fieldMode: 'read'\n        }\n      }\n    }),\n    orders: relationship({\n      ref: 'Order.user',\n      many: true\n    }),\n    role: relationship({\n      ref: 'Role.assignedTo',\n      access: {\n        create: permissions.canManageUsers,\n        update: permissions.canManageUsers\n      }\n    }),\n    products: relationship({\n      ref: 'Product.user',\n      many: true\n    })\n  }\n});","map":null,"metadata":{},"sourceType":"module"}