{"ast":null,"code":"import { integer, relationship, text, virtual } from '@keystone-next/fields';\nimport { list } from '@keystone-next/keystone/schema';\nimport formatMoney from '../lib/formatMoney';\nimport { isSignedIn, rules } from '../access';\nexport const Order = list({\n  access: {\n    create: isSignedIn,\n    read: rules.canOrder,\n    update: () => false,\n    delete: () => false\n  },\n  fields: {\n    label: virtual({\n      graphQLReturnType: 'String',\n\n      resolver(item) {\n        return `${formatMoney(item.total)}`;\n      }\n\n    }),\n    total: integer(),\n    items: relationship({\n      ref: 'OrderItem.order',\n      many: true\n    }),\n    user: relationship({\n      ref: 'User.orders'\n    }),\n    charge: text()\n  }\n});","map":null,"metadata":{},"sourceType":"module"}