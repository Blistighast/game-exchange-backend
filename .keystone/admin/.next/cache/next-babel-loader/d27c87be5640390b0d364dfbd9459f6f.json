{"ast":null,"code":"import { integer, relationship, select, text } from '@keystone-next/fields';\nimport { list } from '@keystone-next/keystone/schema';\nimport { isSignedIn, rules } from '../access';\nexport const Product = list({\n  access: {\n    create: isSignedIn,\n    read: rules.canReadProducts,\n    update: rules.canManageProducts,\n    delete: rules.canManageProducts\n  },\n  fields: {\n    name: text({\n      isRequired: true\n    }),\n    description: text({\n      ui: {\n        displayMode: 'textarea'\n      }\n    }),\n    photo: relationship({\n      ref: 'ProductImage.product',\n      ui: {\n        displayMode: 'cards',\n        cardFields: ['image', 'altText'],\n        inlineCreate: {\n          fields: ['image', 'altText']\n        },\n        inlineEdit: {\n          fields: ['image', 'altText']\n        }\n      }\n    }),\n    // relationship to photo\n    status: select({\n      options: [{\n        label: 'Draft',\n        value: 'DRAFT'\n      }, {\n        label: 'Available',\n        value: 'AVAILABLE'\n      }, {\n        label: 'Unavailable',\n        value: 'UNAVAILABLE'\n      }],\n      defaultValue: 'DRAFT',\n      ui: {\n        displayMode: 'segmented-control',\n        createView: {\n          fieldMode: 'hidden'\n        }\n      }\n    }),\n    price: integer(),\n    user: relationship({\n      ref: 'User.products',\n      defaultValue: ({\n        context\n      }) => ({\n        connect: {\n          id: context.session.itemId\n        }\n      })\n    }) // TODO photo\n\n  }\n});","map":null,"metadata":{},"sourceType":"module"}